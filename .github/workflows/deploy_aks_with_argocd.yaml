name: Manage AKS Cluster

on:
  workflow_dispatch:
    inputs:
      clusterName:
        description: 'Cluster Name'
        required: true
      region:
        description: 'Region'
        required: true
      resourceGroupName:
        description: 'Resource Group Name'
        required: true
      kubernetesVersion:
        description: 'Kubernetes Version'
        required: true
      dnsPrefix:
        description: 'DNS Prefix'
        required: true
      repoURLforArgo: 
        description: 'The URL of the repository for Argo CD to deploy GKE'
        required: true
jobs:
  deploy-cluster:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Install Argo CD CLI
      run: |
        sudo curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
        sudo chmod +x /usr/local/bin/argocd

    - name: Login to Argo CD 
      run: argocd login ${{ secrets.ARGOCD_SERVER }} --username ${{ secrets.ARGOCD_USER }} --password ${{ secrets.ARGOCD_PASS }} --insecure --grpc-web 

    - name: Register Repository in Argo CD
      run: argocd repo add ${{ github.event.inputs.repoURLforArgo }} --username hoanglecao --password ${{ secrets.MYGITHUB_TOKEN }}

    - name: Create ArgoCD app for Azure provider
      run: |
          # Check if the ArgoCD app exists
          if argocd app get azure-provider-app > /dev/null 2>&1; then
            echo "azure-provider-app already exists."
          else
            argocd app create azure-provider-app \
              --repo ${{ github.event.inputs.repoURLforArgo }} \
              --path azure \
              --dest-server https://kubernetes.default.svc \
              --dest-namespace azure-provider \
              --project default \
              --sync-policy automated \
              --sync-option CreateNamespace=true \
              --sync-retry-limit 5 \
              --upsert \
              --grpc-web
          fi

    - name: Create ArgoCD app for AKS cluster
      run: |
          argocd app create ${{ github.event.inputs.clusterName }}-app \
            --repo ${{ github.event.inputs.repoURLforArgo }} \
            --path aks-cluster \
            --dest-server https://kubernetes.default.svc \
            --dest-namespace azure-provider \
            --project default \
            --sync-policy automated \
            --sync-retry-limit 5 \
            --upsert \
            --grpc-web